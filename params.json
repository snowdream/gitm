{"name":"Gitm","tagline":"The multiple repository tool ","body":"# gitm\r\n  [![NPM Version][npm-image]][npm-url]\r\n  [![NPM Downloads][downloads-image]][downloads-url]\r\n\r\n## Introduction\r\nA simple but useful tool to manage multiple git repositories.     \r\nBe similar to repo, git submodule.\r\n\r\n## System requirements\r\nNode.js v0.12.0+\r\n\r\n## Installation\r\n```bash\r\nnpm install gitm -g\r\n```\r\n\r\n## Scene\r\n### Scene One\r\n![Scene One](https://raw.githubusercontent.com/snowdream/gitm/master/docs/img/workflow0.png)\r\n\r\nIf you have a project A on the left.          \r\nNow, you want to modularize it to the project A on the right.\r\n\r\nFor the project A on the left, It is a git repository.        \r\nFor the project A on the right, project A is not a git repository, project Main and project Module ** are all git repositories.\r\n\r\nBrowse the example at [repositories](examples/repositories)\r\n\r\n### Scene Two\r\n![Scene One](https://raw.githubusercontent.com/snowdream/gitm/master/docs/img/workflow1.png)\r\n\r\nIf you have a project B on the left.          \r\nNow, you want to modularize it to the project B on the right.\r\n\r\nFor the project B on the left, It is a git repository.         \r\nFor the project B on the right, project B, project Main and project Module ** are all git repositories.\r\n\r\nBrowse the example at [repository](examples/repository)\r\n\r\n## Config  \r\nUsually, gitm needs two config files. **repo.gitm** and  **branch.gitm**   \r\n\r\n### **repo.gitm** \r\n![repo.gitm](https://raw.githubusercontent.com/snowdream/gitm/master/docs/img/repo.png)\r\n\r\n1. **repository**, required，represent the outermost project is a git repository.\r\n1. **url**, required，represent url for the git repository.\r\n1. **branches**, optional，represent local branches for the git repository. the first branch will be the default branch.\r\n1. **name**, optional，represent local name for the git repository. if this is not provided, then try to guess it from the url.\r\n1. **repositories**, optional，represent the git repository has sub git repositories.\r\n\r\n### **branch.gitm** \r\n![branch.gitm](https://raw.githubusercontent.com/snowdream/gitm/master/docs/img/branch.png)\r\n\r\n1. **new/develop/master**, required，represent the group name of the branches.\r\n1. **gitmA**, required，represent local name for the git repository.\r\n1. **new:develop**, **new** is required，**develop** is optional，**new** represent local branch for the git repository. **develop** represent the local branch **new** may be created from the branch **develop** or the branch **origin/develop**.\r\n\r\n## Usage\r\n**Warning: All the commands as follows should be executed in the root path.**\r\n**For Scene One, the root path is Project A.**\r\n**For Scene Two, the root path is Project B.**\r\n\r\n### gitm init   \r\n* If **repo.gitm** does not exist in the root path, try to create it.\r\n* If **branch.gitm** does not exist in the root path, try to create it.\r\n* If **.gitignore** does not exist in every git repository, try to create it. If sub git repository exist, try to add them name into the file .gitignore.\r\n\r\n### gitm clone\r\n```bash\r\ngitm clone\r\n```\r\nRead the file **repo.gitm** in the current directory, and clone every git repository.     \r\nIf the property **branches** exist, every branch will be checkout. The fisrt branch will be the default branch.\r\n\r\n```bash\r\ngitm clone https://raw.githubusercontent.com/snowdream/gitm/master/examples/repository/repo.gitm\r\n```\r\nRead the file **repo.gitm** from the url, other operation is the same as the command `gitm clone`\r\n\r\n### gitm checkout [name]\r\n\r\nCheck the file  **branch.gitm**，if the **name** does not exist in the names of group, then `git checkout [name]` will be executed in every git repository.else deal it with the following rules.\r\n![gitm checkout](https://raw.githubusercontent.com/snowdream/gitm/master/docs/img/checkout.png)\r\n```bash\r\ngitm checkout new\r\n```\r\n\r\n`git checkout new` will be executed in every git repository. such as **gitmA**.\r\n\r\n1. if the branch **new** exist, excute `git checkout new`\r\n1. if the branch **origin/new** exist, excute `git checkout –b new origin/new`\r\n1. if the branch **develop** exist, excute `git checkout –b new develop`\r\n1. if the branch **origin/develop** exist, excute `git checkout –b new origin/develop`\r\n1. if all the branch up does not exist, excute `git checkout –b new`\r\n\r\nAll the steps will be taken in order. once a step has been taken, then the command is finished, and the rest steps will not be taken.\r\n\r\n### gitm fetch\r\n```bash\r\ngitm fetch\r\n```\r\nCheck the file  **repo.gitm**，execute the following command in every git repository.   \r\n```bash\r\ngit fetch --all --progress -v\r\n```\r\n\r\nIf `gitm fetch` has any other parameters, such as `gitm fetch origin master`\r\nThen `git fetch origin master` will be executed in every git repository.\r\n\r\n### gitm pull\r\n```bash\r\ngitm pull\r\n```\r\nCheck the file  **repo.gitm**，execute the following command in every git repository.   \r\n```bash\r\ngit pull origin branch --progress -v\r\n```\r\n**branch** is the current branch of the git repository.\r\n\r\nIf `gitm pull` has any other parameters, such as `gitm pull origin master`\r\nThen `git pull origin master` will be executed in every git repository.\r\n\r\n### gitm push\r\n```bash\r\ngitm push\r\n```\r\nCheck the file  **repo.gitm**，execute the following command in every git repository.   \r\n```bash\r\ngit push origin branch:branch --progress -v\r\n```\r\n**branch** is the current branch of the git repository.\r\n\r\nIf `gitm push` has any other parameters, such as `gitm push origin master`\r\nThen `git push origin master` will be executed in every git repository.\r\n\r\n\r\n### gitm help [cmd]\r\nSuch as `gitm help clone`. It will execute the following command only once.\r\n```bash\r\ngit help clone\r\n```\r\n\r\n### gitm -h  / gitm --help \r\nshow helps for gitm\r\n\r\n### gitm -V  / gitm --version \r\nshow version for gitm\r\n\r\n###  Other git commands which have not been list here, such as `gitm tag v0.1`\r\nUse git in place of gitm, then execute the command in every git repository. \r\n\r\n\r\n## License\r\n```\r\nCopyright (C) 2015 Snowdream Mobile <yanghui1986527@gmail.com>\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n        http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n```\r\n\r\n[npm-image]: https://img.shields.io/npm/v/gitm.svg\r\n[npm-url]: https://npmjs.org/package/gitm\r\n[downloads-image]: https://img.shields.io/npm/dm/gitm.svg\r\n[downloads-url]: https://npmjs.org/package/gitm","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}