#!/usr/bin/env node

var fs = require('fs');
var request = require('sync-request');
var program = require('commander');
var gitm_execute = require('./gitm-execute');
var os = require('os');

program
    .parse(process.argv);

var repo = JSON.parse(fs.readFileSync('./repo.gitm'));

if (!repo) {
    console.info("The file repo.gitm does not exist.");
    return;
}

if (!repo.repository && !repo.repositories) {
    console.info("The file repo.gitm is not valid.");
    return;
}

exports.git_recursion  = function (command) {
    if (repo.repository) {
        git_command(repo.repository,command);
    } else if (repo.repositories) {
        for (var i = 0, len = repo.repositories.length; i < len; i++) {
            git_command(repo.repositories[i], command);
        }
    }
};

function git_command(repo,command) {
    if (!repo || !command) {
        return;
    }

    if (!repo.name) {
        repo.name = getRepoName(repo.url);
    }

    gitm_execute.execSync(command);
    //var branch =  gitm_execute.execSync("git branch");
    //branch = branch.substring()
    //console.info('branch: ' + branch);


    if (repo.repositories) {
        for (var i = 0, len = repo.repositories.length; i < len; i++) {
            if(!repo.repositories[i].name){
                repo.repositories[i].name = getRepoName(repo.repositories[i].url);
            }

            try {
                process.chdir(repo.repositories[i].name);
                console.log(os.EOL);
                console.log('$ cd ' + repo.repositories[i].name);
            }
            catch (err) {
                console.log('chdir: ' + err);
            }

            git_command(repo.repositories[i],command);

            process.chdir("..");
            console.log('$ cd ..');
        }

    }
}

function getRepoName(url) {
    if (!url) {
        return;
    }

    var sep = '/';
    if (!url.match(sep) && !url.match('\\\\')) {
        sep = '/';
    }

    var index = url.lastIndexOf(sep);
    if (index == url.length - 1) {
        url = url.substring(0, index);
        index = url.lastIndexOf(sep);
    }

    var name = url.substring(index + 1);
    name = name.replace(/\.git/g, "");

    return name;
}
